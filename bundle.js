var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.arrayIteratorImpl=function(a){var b=0;return function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}}};$jscomp.arrayIterator=function(a){return{next:$jscomp.arrayIteratorImpl(a)}};$jscomp.makeIterator=function(a){var b="undefined"!=typeof Symbol&&Symbol.iterator&&a[Symbol.iterator];return b?b.call(a):$jscomp.arrayIterator(a)};$jscomp.arrayFromIterator=function(a){for(var b,c=[];!(b=a.next()).done;)c.push(b.value);return c};
$jscomp.arrayFromIterable=function(a){return a instanceof Array?a:$jscomp.arrayFromIterator($jscomp.makeIterator(a))};$jscomp.owns=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)};$jscomp.assign="function"==typeof Object.assign?Object.assign:function(a,b){for(var c=1;c<arguments.length;c++){var d=arguments[c];if(d)for(var e in d)$jscomp.owns(d,e)&&(a[e]=d[e])}return a};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;
$jscomp.SIMPLE_FROUND_POLYFILL=!1;$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);
$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};$jscomp.polyfill("Object.assign",function(a){return a||$jscomp.assign},"es6","es3");$jscomp.polyfill("Math.log10",function(a){return a?a:function(a){return Math.log(a)/Math.LN10}},"es6","es3");
$jscomp.polyfill("Array.prototype.fill",function(a){return a?a:function(a,c,d){var b=this.length||0;0>c&&(c=Math.max(0,b+c));if(null==d||d>b)d=b;d=Number(d);0>d&&(d=Math.max(0,b+d));for(c=Number(c||0);c<d;c++)this[c]=a;return this}},"es6","es3");var TYPE_X="x",DATE_OPTIONS={day:"numeric",month:"short"},FIRST_INDEX=1,X_LABEL_WIDTH=70;
function prepareXAxisData(a,b){for(var c=Array(b.length),d=Array(b.length),e=FIRST_INDEX;e<b.length;e+=1){var f=new Date(b[e]);c[e]=f;d[e]=f.toLocaleDateString("hc",DATE_OPTIONS)}return{id:a,type:TYPE_X,column:b,dates:c,labels:d}}
function prepareMinMax(a){for(var b=Array(a.length),c=Array(a.length),d=a[FIRST_INDEX],e=a[FIRST_INDEX],f=FIRST_INDEX;f<a.length;f+=1){var g=a[f];d=Math.min(d,g);e=Math.max(e,g);for(var h=f+1;h<a.length&&(!c[f]&&g<a[h]&&(c[f]=h),!b[f]&&g>a[h]&&(b[f]=h),!c[f]||!b[f]);h+=1);}return{indexMax:c,indexMin:b,maxValue:e,minValue:d}}
function prepareDataset(a){var b={data:{},length:0,firstIndex:FIRST_INDEX,lastIndex:0,order:[],x:null};if(!Array.isArray(a.columns))return null;a.columns.forEach(function(c){var d=c[0];a.types[d]===TYPE_X?b.x=prepareXAxisData(d,c):(b.order.push(d),b.data[d]=Object.assign({},{id:d,column:c,type:a.types[d],name:a.names[d],color:a.colors[d],visible:!0},prepareMinMax(c)))});b.length=b.x.column.length;b.lastIndex=b.length-1;return b}
function getExtremum(a,b,c,d){for(;b[c]&&b[c]<=d;)c=b[c];return a[c]}function getDatasetMinMax(a,b,c){var d=-Infinity,e=-d;a.order.forEach(function(f){f=a.data[f];f.visible&&(d=Math.max(d,getExtremum(f.column,f.indexMax,b,c)),e=Math.min(e,getExtremum(f.column,f.indexMin,b,c)))});return{max:d,min:e}}
function updateAxisY(a,b,c){c=void 0===c?6:c;var d=b.max-b.min;2>c?c=2:2<c&&--c;c=d/c;d=Math.pow(10,Math.floor(Math.log10(c)));c=d*Math.floor(c/d+.5);a.min=c*Math.floor(b.min/c);a.max=c*Math.ceil(b.max/c);a.tickStep=c}function updateAxisX(a,b){var c=b.lastIndex,d=b.startIndex,e=b.endIndex,f=Math.round(X_LABEL_WIDTH/b.stepX);for(b=1;b<f;)b*=2;e=e-e%b+b;e>c&&(e-=b);a.startIndex=d-d%b;a.endIndex=e;a.tickStep=b}
function updateChartsState(a,b,c,d){var e=a.firstIndex,f=a.lastIndex,g=d.width/(c[1]-c[0]);b.lastIndex=f;b.startIndex=Math.floor(f*c[0])+e;b.endIndex=Math.ceil(f*c[1]);updateAxisY(b.axisY,getDatasetMinMax(a,b.startIndex,b.endIndex));a=b.axisY;b.stepX=g/f;b.stepY=d.height/(a.max-a.min);b.offsetX=-g*c[0];b.offsetY=a.min*b.stepY;updateAxisX(b.axisX,b)}
var createViewport=function(a,b,c,d,e,f,g,h){return{x:a,y:b,width:c,height:d,cx0:void 0===e?0:e,cy0:void 0===f?0:f,cx1:void 0===g?0:g,cy1:void 0===h?0:h}};function createEl(a,b,c){a=document.createElement(a);b&&(a.className=b);if("object"===typeof c)for(var d in c)a.setAttribute(d,c[d]);return a}function getContext(a){return a.getContext("2d")}function getPixelRatio(){return window.devicePixelRatio||1}function rAF(a){return window.requestAnimationFrame(a)}
function hideEl(a){a.style.display="none"}function showEl(a){a.style.display=null}function onEvent(a,b,c,d){b.split(",").forEach(function(b){return a.addEventListener(b,c,d)})}function offEvent(a,b,c){b.split(",").forEach(function(b){return a.removeEventListener(b,c)})}function getPageX(a){return(a.touches?a.touches[0]:a).pageX}function getOffsetX(a){if(a.touches){a=a.touches[0];var b=a.target.getBoundingClientRect();return a.clientX-b.left}return a.offsetX}
function bindObjectMethods(a,b){b.forEach(function(b){b in a&&(a[b]=a[b].bind(a))})}var styles={"-webkit-filter":"tch-1_Qgx",filter:"tch-1_Qgx",checkbox:"tch-37oPe",input:"tch-yqUE1",icon:"tch-1IpOz"};function checkboxTpl(a,b){return'<label class="'+styles.checkbox+'">'+('<input class="'+styles.input+'" name="'+a+'" type="checkbox" '+(b.visible?"checked":"")+">")+('<div class="'+styles.icon+'" style="border-color:'+b.color+'"></div>')+b.name+"</label>"}
var Filter=function(a,b){this.dataset=a;this.$el=createEl("div",styles.filter);this.render();this.$el.addEventListener("change",function(a){a=a.target;return b(a.name,a.checked)})};Filter.prototype.render=function(){var a=this.dataset,b=a.data;this.$el.innerHTML=a.order.reduce(function(a,d){return a+checkboxTpl(d,b[d])},"")};
var theme={textColor:"#929EA6",fontFamily:'"HelveticaNeue-Light", "Helvetica Neue Light", "Helvetica Light", Helvetica, Arial , Verdana, sans-serif',fontSize:"15px"},gridLevels=[45,120,195,270,345,420].reverse(),pixelRatio=getPixelRatio();function setScale(a){a.scale(pixelRatio,pixelRatio)}function clearRect(a,b){a.save();setScale(a);a.clearRect(b.x-b.cx0,b.y-b.cy0,b.width+b.cx0+b.cx1,b.height+b.cy0+b.cy1);a.restore()}
function drawCharts(a,b,c,d,e){e=void 0===e?2:e;var f=c.startIndex,g=c.endIndex,h=c.stepX,k=c.stepY,l=c.offsetX;c=c.offsetY;a.save();a.setTransform(pixelRatio,0,0,-pixelRatio,(l+d.x)*pixelRatio,(c+d.height+d.y)*pixelRatio);a.lineJoin="round";a.lineWidth=e;b.order.forEach(function(c){var d=b.data[c],e=d.color;c=d.column;if(d.visible){a.beginPath();a.strokeStyle=e;a.moveTo(f*h,c[f]*k);for(d=f+1;d<=g;d+=1)a.lineTo(d*h,c[d]*k);a.stroke()}});a.restore()}
function drawGrid(a,b){a.save();setScale(a);a.lineWidth=1===pixelRatio?2:1.5;a.strokeStyle="#f4f4f4";a.beginPath();gridLevels.forEach(function(c){a.moveTo(b.x,c+b.y);a.lineTo(b.width,c+b.y)});a.stroke();a.restore()}function drawYLabels(a,b,c){var d=b.axisY;a.save();setScale(a);a.fillStyle=theme.textColor;a.font=theme.fontSize+" "+theme.fontFamily;gridLevels.forEach(function(b,f){a.fillText(d.min+d.tickStep*f,c.x,b-7+c.y)});a.restore()}
function drawXLabels(a,b,c,d){var e=c.axisX,f=c.offsetX;c=c.stepX;a.save();a.setTransform(pixelRatio,0,0,pixelRatio,(f+d.x)*pixelRatio,440*pixelRatio);a.fillStyle=theme.textColor;a.textAlign="center";a.font=theme.fontSize+" "+theme.fontFamily;for(d=e.startIndex;d<=e.endIndex;d+=e.tickStep)a.fillText(b[d],d*c,0);a.restore()}
function drawScroll(a,b,c,d){var e=b.right-b.left,f=e+2*c;clearRect(a,d);a.save();setScale(a);a.fillStyle="rgba(242,246,250,.7)";a.fillRect(d.x,d.y,d.width,d.height);a.fillStyle="rgba(100,144,177,0.4)";a.clearRect(b.left-c,d.y,f,d.height);a.fillRect(b.left-c,d.y,f,d.height);a.clearRect(b.left,d.y+2,e,d.height-4);a.restore()}
function drawCursor(a,b,c,d,e){var f=c.stepX,g=c.stepY,h=c.offsetX;c=c.offsetY;clearRect(a,e);a.save();a.setTransform(pixelRatio,0,0,pixelRatio,(h+e.x)*pixelRatio,e.y*pixelRatio);var k=d*f;a.beginPath();a.strokeStyle="#E0E6EA";a.moveTo(k,0);a.lineTo(k,e.height);a.stroke();a.setTransform(pixelRatio,0,0,-pixelRatio,(h+e.x)*pixelRatio,(c+e.height+e.y)*pixelRatio);b.order.forEach(function(c){c=b.data[c];c.visible&&(a.beginPath(),a.strokeStyle=c.color,a.lineWidth="3",a.fillStyle="#fff",a.arc(k,c.column[d]*
g,6,0,2*Math.PI),a.fill(),a.stroke())});a.restore()}var styles$1={scroll:"tch-iTusj",leftHand:"tch-34oNu",rightHand:"tch-3GcYT",centerHand:"tch-7WkGf","cursor-resize":"tch-OQyLi","cursor-grabbing":"tch-3mX4n"},$jscomp$compprop0={},hands=($jscomp$compprop0[styles$1.leftHand]=!0,$jscomp$compprop0[styles$1.rightHand]=!0,$jscomp$compprop0[styles$1.centerHand]=!0,$jscomp$compprop0),sideSliderWidth=6;
function scrollTpl(){var a=createEl("div",styles$1.scroll),b=createEl("div",styles$1.leftHand),c=createEl("div",styles$1.rightHand),d=createEl("div",styles$1.centerHand);a.appendChild(b);a.appendChild(c);a.appendChild(d);return{$el:a,$leftHand:b,$rightHand:c,$centerHand:d}}
var Scroll=function(a,b,c,d){this.ctx=a;Object.assign(this,scrollTpl());this.range=b;this.minRange=c;this.state={left:0,right:0};this.prevPageX=this.activeControl=null;this.onChange=d;bindObjectMethods(this,["handleMove","handleMoveEnd","handleMoveStart"]);onEvent(window,"mousedown,touchstart",this.handleMoveStart)};Scroll.prototype.destroy=function(){this.activeControl=null;this.detachMoveEvents();offEvent(window,"mousedown,touchstart",this.handleMoveStart)};
Scroll.prototype.update=function(){var a=this.$el;this.vp=createViewport(0,a.offsetTop,a.offsetWidth,a.offsetHeight);this.width=this.vp.width-2*sideSliderWidth;this.leftMin=sideSliderWidth;this.rightMax=this.width+sideSliderWidth;this.updateState();this.redrawSlider();this.redrawControls()};
Scroll.prototype.updateState=function(){this.state.left=Math.round(this.range[0]*this.width)+sideSliderWidth;this.state.right=Math.round(this.range[1]*this.width)+sideSliderWidth;this.state.minWidth=Math.round(this.minRange*this.width)};Scroll.prototype.updateRange=function(){this.range[0]=(this.state.left-sideSliderWidth)/this.width;this.range[1]=(this.state.right-sideSliderWidth)/this.width};
Scroll.prototype.attachMoveEvents=function(){onEvent(window,"mousemove,touchmove",this.handleMove);onEvent(window,"mouseup,touchend,touchcancel",this.handleMoveEnd)};Scroll.prototype.detachMoveEvents=function(){offEvent(window,"mousemove,touchmove",this.handleMove);offEvent(window,"mouseup,touchend,touchcancel",this.handleMoveEnd)};Scroll.prototype.handleMoveStart=function(a){var b=a.target.className;hands[b]&&(this.activeControl=b,this.prevPageX=getPageX(a),this.attachMoveEvents(),hideEl(this.$el))};
Scroll.prototype.handleMove=function(a){if(a=getPageX(a)-this.prevPageX)if(a=this.applyDelta(a))this.prevPageX+=a,this.updateRange(),this.onChange(this.range)};Scroll.prototype.handleMoveEnd=function(){this.activeControl=null;this.detachMoveEvents();this.redrawControls();showEl(this.$el)};
Scroll.prototype.applyDelta=function(a){var b=this.state,c=b.left,d=b.right;b=b.minWidth;var e=d-c,f=a,g=c,h=d;this.activeControl===styles$1.leftHand?(g+=a,g>d-b?g=d-b:g<this.leftMin&&(g=this.leftMin),f=g-c):this.activeControl===styles$1.rightHand?(h+=a,h<c+b?h=c+b:h>this.rightMax&&(h=this.rightMax),f=h-d):this.activeControl===styles$1.centerHand&&(g+=a,h+=a,h>this.rightMax?(h=this.rightMax,g=h-e):g<this.leftMin&&(g=this.leftMin,h=g+e),f=g-c);this.state.left=g;this.state.right=h;return f};
Scroll.prototype.redrawSlider=function(){drawScroll(this.ctx,this.state,sideSliderWidth,this.vp)};Scroll.prototype.redrawControls=function(){var a=this.state,b=a.left;a=a.right;this.$leftHand.style.left=b-sideSliderWidth+"px";this.$rightHand.style.left=a+"px";this.$centerHand.style.left=b+"px";this.$centerHand.style.width=a-b+"px"};
var styles$2={header:"tch-3lmAk",chartWrap:"tch-13R36",charts:"tch-3KEDM",canvas:"tch-3MU0P",cursorZone:"tch-1IxmZ",bubble:"tch-3NMVD",bubbleDate:"tch-s4zYX",bubbleContent:"tch-3M7g5",bubbleItem:"tch-1d5Lj",bubbleVal:"tch-2qwdV"};
function chartTpl(){var a=createEl("div",styles$2.chartWrap),b=createEl("div",styles$2.header),c=createEl("div",styles$2.charts),d=createEl("canvas",styles$2.canvas),e=createEl("canvas",styles$2.canvas),f=createEl("div",styles$2.cursorZone),g=createEl("div",styles$2.bubble);hideEl(g);f.appendChild(g);c.appendChild(d);c.appendChild(e);c.appendChild(f);a.appendChild(b);a.appendChild(c);return{$el:a,$header:b,$charts:c,$chartsCanvas:d,$deskCanvas:e,$cursorZone:f,$bubble:g}}
function bubbleTpl(a,b){var c='<div class="'+styles$2.bubbleDate+'">'+a.x.labels[b]+"</div>",d="";a.order.forEach(function(c){c=a.data[c];d+='<div class="'+styles$2.bubbleItem+'" style="color: '+c.color+';"><div class="'+styles$2.bubbleVal+'">'+c.column[b]+"</div>"+c.name+"</div>"});return'<div class="'+styles$2.bubbleWrap+'">'+c+('<div class="'+styles$2.bubbleContent+'">'+d+"</div>")+"</div>"}
var Chart=function(a,b,c){bindObjectMethods(this,["handleFilterChange","handleScrollChange"]);this.dataset=prepareDataset(c);this.state={axisY:{},axisX:{}};this.previewState={axisY:{},axisX:{}};Object.assign(this,chartTpl());a.appendChild(this.$el);this.chartsCtx=getContext(this.$chartsCanvas);this.deskCtx=getContext(this.$deskCanvas);this.$header.innerText=b;this.scroll=new Scroll(this.deskCtx,[.75,1],.01,this.handleScrollChange);this.$charts.appendChild(this.scroll.$el);this.filter=new Filter(this.dataset,
this.handleFilterChange);this.$el.appendChild(this.filter.$el);bindObjectMethods(this,["handleCursorStart","handleCursorMove","handleCursorEnd"]);this.showCursor=!1;this.cursorIndex=null;onEvent(this.$cursorZone,"mouseenter,touchstart",this.handleCursorStart);this.update();this.redrawPreview();this.redrawCharts()};Chart.prototype.destroy=function(){this.scroll.destroy();this.detachCursorEvents()};Chart.prototype.handleFilterChange=function(a,b){this.dataset.data[a].visible=b;this.redrawCharts();this.redrawPreview()};
Chart.prototype.handleScrollChange=function(){this.redrawCharts()};Chart.prototype.attachCursorEvents=function(){onEvent(this.$cursorZone,"mousemove,touchmove",this.handleCursorMove);onEvent(this.$cursorZone,"mouseleave,touchend,touchcancel",this.handleCursorEnd)};Chart.prototype.detachCursorEvents=function(){offEvent(this.$cursorZone,"mousemove,touchmove",this.handleCursorMove);offEvent(this.$cursorZone,"mouseleave,touchend,touchcancel",this.handleCursorEnd)};
Chart.prototype.handleCursorStart=function(a){this.showCursor=!0;this.attachCursorEvents();this.moveCursor(getOffsetX(a))};Chart.prototype.handleCursorMove=function(a){this.showCursor?this.moveCursor(getOffsetX(a)):this.hideCursor()};Chart.prototype.handleCursorEnd=function(){this.hideCursor()};
Chart.prototype.update=function(){var a=this.$chartsCanvas,b=a.offsetHeight,c=a.offsetWidth,d=getPixelRatio();[this.$chartsCanvas,this.$deskCanvas].forEach(function(a){a.height=b*d;a.width=c*d});this.vp={grid:createViewport(0,0,c,450),charts:createViewport(0,0,c,420,0,0,0,10),preview:createViewport(0,b-55,c,50,0,10,0,10)};this.scroll.update()};Chart.prototype.updateState=function(){updateChartsState(this.dataset,this.state,this.scroll.range,this.vp.charts)};
Chart.prototype.updatePreviewState=function(){updateChartsState(this.dataset,this.previewState,[0,1],this.vp.preview)};Chart.prototype.moveCursor=function(a){var b=this,c=this.deskCtx,d=this.dataset,e=this.state,f=this.vp;rAF(function(){var g=Math.round((a-e.offsetX)/e.stepX);g<e.startIndex?g=e.startIndex:g>e.endIndex&&(g=e.endIndex);b.cursorIndex!==g&&(b.cursorIndex=g,b.redrawBubble(),drawCursor(c,d,e,g,f.charts))})};
Chart.prototype.hideCursor=function(){var a=this.deskCtx,b=this.vp;this.showCursor=!1;this.cursorIndex=null;this.detachCursorEvents();hideEl(this.$bubble);rAF(function(){clearRect(a,b.charts)})};Chart.prototype.redrawBubble=function(){var a=this.$bubble,b=this.dataset,c=this.state,d=this.cursorIndex,e=this.vp;this.showCursor&&(showEl(a),a.innerHTML=bubbleTpl(b,d),b=a.offsetWidth,c=Math.round(c.stepX*d+c.offsetX)-Math.round(b/2),0>c?c=0:c>e.charts.width-b&&(c=e.charts.width-b),a.style.left=c+"px")};
Chart.prototype.redrawCharts=function(){var a=this,b=this.chartsCtx,c=this.dataset,d=this.state,e=this.vp;rAF(function(){a.updateState();a.scroll.redrawSlider();clearRect(b,e.grid);drawGrid(b,e.grid);drawCharts(b,c,d,e.charts,3);drawYLabels(b,d,e.grid);drawXLabels(b,c.x.labels,d,e.grid)})};Chart.prototype.redrawPreview=function(){var a=this,b=this.chartsCtx,c=this.dataset,d=this.previewState,e=this.vp;rAF(function(){a.updatePreviewState();clearRect(b,e.preview);drawCharts(b,c,d,e.preview)})};
var sourceData=[{columns:[["x",15424128E5,15424992E5,15425856E5,1542672E6,15427584E5,15428448E5,15429312E5,15430176E5,1543104E6,15431904E5,15432768E5,15433632E5,15434496E5,1543536E6,15436224E5,15437088E5,15437952E5,15438816E5,1543968E6,15440544E5,15441408E5,15442272E5,15443136E5,15444E8,15444864E5,15445728E5,15446592E5,15447456E5,1544832E6,15449184E5,15450048E5,15450912E5,15451776E5,1545264E6,15453504E5,15454368E5,15455232E5,15456096E5,1545696E6,15457824E5,15458688E5,15459552E5,15460416E5,1546128E6,
15462144E5,15463008E5,15463872E5,15464736E5,154656E7,15466464E5,15467328E5,15468192E5,15469056E5,1546992E6,15470784E5,15471648E5,15472512E5,15473376E5,1547424E6,15475104E5,15475968E5,15476832E5,15477696E5,1547856E6,15479424E5,15480288E5,15481152E5,15482016E5,1548288E6,15483744E5,15484608E5,15485472E5,15486336E5,154872E7,15488064E5,15488928E5,15489792E5,15490656E5,1549152E6,15492384E5,15493248E5,15494112E5,15494976E5,1549584E6,15496704E5,15497568E5,15498432E5,15499296E5,1550016E6,15501024E5,15501888E5,
15502752E5,15503616E5,1550448E6,15505344E5,15506208E5,15507072E5,15507936E5,155088E7,15509664E5,15510528E5,15511392E5,15512256E5,1551312E6,15513984E5,15514848E5,15515712E5,15516576E5,1551744E6,15518304E5,15519168E5,15520032E5],["y0",37,20,32,39,32,35,19,65,36,62,113,69,120,60,51,49,71,122,149,69,57,21,33,55,92,62,47,50,56,116,63,60,55,65,76,33,45,64,54,81,180,123,106,37,60,70,46,68,46,51,33,57,75,70,95,70,50,68,63,66,53,38,52,109,121,53,36,71,96,55,58,29,31,55,52,44,126,191,73,87,255,278,219,170,
129,125,126,84,65,53,154,57,71,64,75,72,39,47,52,73,89,156,86,105,88,45,33,56,142,124,114,64],["y1",22,12,30,40,33,23,18,41,45,69,57,61,70,47,31,34,40,55,27,57,48,32,40,49,54,49,34,51,51,51,66,51,94,60,64,28,44,96,49,73,30,88,63,42,56,67,52,67,35,61,40,55,63,61,105,59,51,76,63,57,47,56,51,98,103,62,54,104,48,41,41,37,30,28,26,37,65,86,70,81,54,74,70,50,74,79,85,62,36,46,68,43,66,50,28,66,39,23,63,74,83,66,40,60,29,36,27,54,89,50,73,52]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"Joined",y1:"Left"},
colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15424128E5,15424992E5,15425856E5,1542672E6,15427584E5,15428448E5,15429312E5,15430176E5,1543104E6,15431904E5,15432768E5,15433632E5,15434496E5,1543536E6,15436224E5,15437088E5,15437952E5,15438816E5,1543968E6,15440544E5,15441408E5,15442272E5,15443136E5,15444E8,15444864E5,15445728E5,15446592E5,15447456E5,1544832E6,15449184E5,15450048E5,15450912E5,15451776E5,1545264E6,15453504E5,15454368E5,15455232E5,15456096E5,1545696E6,15457824E5,15458688E5,15459552E5,
15460416E5,1546128E6,15462144E5,15463008E5,15463872E5,15464736E5,154656E7,15466464E5,15467328E5,15468192E5,15469056E5,1546992E6,15470784E5,15471648E5,15472512E5,15473376E5,1547424E6,15475104E5,15475968E5,15476832E5,15477696E5,1547856E6,15479424E5,15480288E5,15481152E5,15482016E5,1548288E6,15483744E5,15484608E5,15485472E5,15486336E5,154872E7,15488064E5,15488928E5,15489792E5,15490656E5,1549152E6,15492384E5,15493248E5,15494112E5,15494976E5,1549584E6,15496704E5,15497568E5,15498432E5,15499296E5,1550016E6,
15501024E5,15501888E5,15502752E5,15503616E5,1550448E6,15505344E5,15506208E5,15507072E5,15507936E5,155088E7,15509664E5,15510528E5,15511392E5,15512256E5,1551312E6,15513984E5,15514848E5,15515712E5,15516576E5,1551744E6,15518304E5,15519168E5,15520032E5],["y0",6706,7579,7798,8307,7866,7736,7816,7630,7536,7105,7178,7619,7917,7483,5772,5700,5435,4837,4716,4890,4753,4820,4538,12162,39444,25765,18012,14421,13249,11310,10377,9399,8917,8259,7902,9442,47596,36160,23866,18500,15488,13722,12270,13413,10574,7092,
7159,7880,8821,8306,7780,7963,7837,7611,7334,7413,7015,6742,6557,6593,6680,6725,6345,5988,6365,9911,28833,19694,14873,11911,10498,9708,8893,8365,7960,7694,45529,42858,31508,23289,19147,15874,14551,13124,11778,10809,10522,9918,9436,8617,8765,8194,8035,7865,7573,7422,7047,7147,6861,6669,6363,12073,32381,21390,15311,12819,11655,10696,9678,9143,8296,7852],["y1",3522,4088,4146,4477,4202,4157,4177,4203,4223,3948,3946,3898,3979,4052,3279,3229,3302,3040,3054,2982,3077,2965,2973,5148,22485,13077,9055,7446,
6824,5995,5787,5367,4997,4689,4630,4785,22365,15244,10626,8666,7681,6929,6219,6367,5402,4932,4844,5146,5265,4887,4714,4722,4718,4693,4746,4819,4455,4419,4323,4407,4277,11589,6100,5076,4769,8929,14002,9756,7520,6343,5633,5415,5052,4850,4624,4480,14102,24005,14263,10845,9028,7755,7197,7001,6737,6254,6150,5922,5603,5048,5423,5003,5035,4747,4814,4661,4462,4516,4221,4111,4053,12515,15781,10499,8175,6831,6287,5990,5590,5148,4760,4809]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",
y1:"#F34C44"}},{columns:[["x",15424128E5,15424992E5,15425856E5,1542672E6,15427584E5,15428448E5,15429312E5,15430176E5,1543104E6,15431904E5,15432768E5,15433632E5,15434496E5,1543536E6,15436224E5,15437088E5,15437952E5,15438816E5,1543968E6,15440544E5,15441408E5,15442272E5,15443136E5,15444E8,15444864E5,15445728E5,15446592E5,15447456E5,1544832E6,15449184E5,15450048E5,15450912E5,15451776E5,1545264E6,15453504E5,15454368E5,15455232E5,15456096E5,1545696E6,15457824E5,15458688E5,15459552E5,15460416E5,1546128E6,
15462144E5,15463008E5,15463872E5,15464736E5,154656E7,15466464E5,15467328E5,15468192E5,15469056E5,1546992E6,15470784E5,15471648E5,15472512E5,15473376E5,1547424E6,15475104E5,15475968E5,15476832E5,15477696E5,1547856E6,15479424E5,15480288E5,15481152E5,15482016E5,1548288E6,15483744E5,15484608E5,15485472E5,15486336E5,154872E7,15488064E5,15488928E5,15489792E5,15490656E5,1549152E6,15492384E5,15493248E5,15494112E5,15494976E5,1549584E6,15496704E5,15497568E5,15498432E5,15499296E5,1550016E6,15501024E5,15501888E5,
15502752E5,15503616E5,1550448E6,15505344E5,15506208E5,15507072E5,15507936E5,155088E7,15509664E5,15510528E5,15511392E5,15512256E5,1551312E6,15513984E5,15514848E5,15515712E5,15516576E5,1551744E6,15518304E5,15519168E5,15520032E5],["y0",4747,4849,5045,5184,5746,5400,5424,5576,6436,5337,4840,5379,4678,4736,5074,4897,4349,5089,4543,5033,5047,4871,4812,4723,4545,4723,4721,4384,4277,4682,4805,4001,4610,5241,5113,4059,4529,4673,5291,5154,5123,5535,5540,5161,5666,5584,6999,6854,5083,5361,5863,5792,5586,6106,
5481,5532,5853,5809,6244,6156,5596,5426,5422,5413,4795,5113,5279,5530,4939,4983,4984,5527,5765,5001,5818,6061,5956,5288,5837,5703,5440,5238,5957,6432,6389,6064,7065,5981,5779,6567,6320,5634,6023,5702,6066,5797,6163,6182,4906,5637,7073,6679,5831,6015,6266,6128,6156,6218,6050,6140,5877,7147],["y1",4605,5036,4956,5168,5008,5069,5223,5360,5695,5209,4796,5028,4931,5123,4987,4964,4982,5037,5050,5144,5049,4971,4911,4792,4562,4597,4759,4761,4646,4543,4597,4428,4213,4270,3961,4784,4699,4711,4855,4717,4563,
4923,5041,4895,4877,5001,5410,5033,5045,5184,4976,5207,5354,5205,4887,4831,5083,5148,5369,5176,5022,4880,4969,5135,4836,4764,4782,4783,4646,4755,4744,4932,5059,4851,4614,4718,5018,5034,5223,5007,4839,4763,4761,5048,5330,5106,5956,5135,5006,4919,5511,5114,5122,5314,5089,5022,4918,4986,4626,4675,4951,4921,5173,5145,5209,4967,5030,5120,5030,4946,4795,5224]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15424128E5,15424992E5,15425856E5,1542672E6,
15427584E5,15428448E5,15429312E5,15430176E5,1543104E6,15431904E5,15432768E5,15433632E5,15434496E5,1543536E6,15436224E5,15437088E5,15437952E5,15438816E5,1543968E6,15440544E5,15441408E5,15442272E5,15443136E5,15444E8,15444864E5,15445728E5,15446592E5,15447456E5,1544832E6,15449184E5,15450048E5,15450912E5,15451776E5,1545264E6,15453504E5,15454368E5,15455232E5,15456096E5,1545696E6,15457824E5,15458688E5,15459552E5,15460416E5,1546128E6,15462144E5,15463008E5,15463872E5,15464736E5,154656E7,15466464E5,15467328E5,
15468192E5,15469056E5,1546992E6,15470784E5,15471648E5,15472512E5,15473376E5,1547424E6,15475104E5,15475968E5,15476832E5,15477696E5,1547856E6,15479424E5,15480288E5,15481152E5,15482016E5,1548288E6,15483744E5,15484608E5,15485472E5,15486336E5,154872E7,15488064E5,15488928E5,15489792E5,15490656E5,1549152E6,15492384E5,15493248E5,15494112E5,15494976E5,1549584E6,15496704E5,15497568E5,15498432E5,15499296E5,1550016E6,15501024E5,15501888E5,15502752E5,15503616E5,1550448E6,15505344E5,15506208E5,15507072E5,15507936E5,
155088E7,15509664E5,15510528E5,15511392E5,15512256E5,1551312E6,15513984E5,15514848E5,15515712E5,15516576E5,1551744E6,15518304E5,15519168E5,15520032E5],["y0",41,31,62,65,66,79,52,26,42,68,71,86,65,54,33,70,52,68,75,92,69,28,33,84,65,56,42,44,26,34,45,49,83,83,66,31,43,55,57,55,54,45,51,64,27,19,38,38,44,49,42,50,60,73,86,65,51,54,48,61,82,83,53,52,48,64,96,103,68,73,58,42,81,80,76,106,93,65,69,104,75,79,92,73,49,63,76,79,83,70,55,47,42,111,93,74,99,107,52,65,80,82,74,154,106,39,40,77,85,66,52,25],
["y1",19,10,36,41,28,39,24,16,14,40,39,37,47,28,16,32,25,29,36,45,38,11,25,37,35,22,25,30,16,20,32,34,37,26,31,10,19,32,34,23,25,22,21,18,11,18,18,23,11,18,22,19,27,27,30,25,27,23,28,30,23,31,27,16,30,21,36,33,25,34,16,24,37,33,26,24,31,21,37,32,35,31,30,27,15,17,38,40,32,34,30,17,21,28,36,30,24,25,20,24,22,42,34,47,40,29,29,31,39,30,29,18]],types:{y0:"line",y1:"line",x:"x"},names:{y0:"#0",y1:"#1"},colors:{y0:"#3DC23F",y1:"#F34C44"}},{columns:[["x",15200352E5,15201216E5,1520208E6,15202944E5,15203808E5,
15204672E5,15205536E5,152064E7,15207264E5,15208128E5,15208992E5,15209856E5,1521072E6,15211584E5,15212448E5,15213312E5,15214176E5,1521504E6,15215904E5,15216768E5,15217632E5,15218496E5,1521936E6,15220224E5,15221088E5,15221952E5,15222816E5,1522368E6,15224544E5,15225408E5,15226272E5,15227136E5,15228E8,15228864E5,15229728E5,15230592E5,15231456E5,1523232E6,15233184E5,15234048E5,15234912E5,15235776E5,1523664E6,15237504E5,15238368E5,15239232E5,15240096E5,1524096E6,15241824E5,15242688E5,15243552E5,15244416E5,
1524528E6,15246144E5,15247008E5,15247872E5,15248736E5,152496E7,15250464E5,15251328E5,15252192E5,15253056E5,1525392E6,15254784E5,15255648E5,15256512E5,15257376E5,1525824E6,15259104E5,15259968E5,15260832E5,15261696E5,1526256E6,15263424E5,15264288E5,15265152E5,15266016E5,1526688E6,15267744E5,15268608E5,15269472E5,15270336E5,152712E7,15272064E5,15272928E5,15273792E5,15274656E5,1527552E6,15276384E5,15277248E5,15278112E5,15278976E5,1527984E6,15280704E5,15281568E5,15282432E5,15283296E5,1528416E6,15285024E5,
15285888E5,15286752E5,15287616E5,1528848E6,15289344E5,15290208E5,15291072E5,15291936E5,152928E7,15293664E5,15294528E5,15295392E5,15296256E5,1529712E6,15297984E5,15298848E5,15299712E5,15300576E5,1530144E6,15302304E5,15303168E5,15304032E5,15304896E5,1530576E6,15306624E5,15307488E5,15308352E5,15309216E5,1531008E6,15310944E5,15311808E5,15312672E5,15313536E5,153144E7,15315264E5,15316128E5,15316992E5,15317856E5,1531872E6,15319584E5,15320448E5,15321312E5,15322176E5,1532304E6,15323904E5,15324768E5,15325632E5,
15326496E5,1532736E6,15328224E5,15329088E5,15329952E5,15330816E5,1533168E6,15332544E5,15333408E5,15334272E5,15335136E5,15336E8,15336864E5,15337728E5,15338592E5,15339456E5,1534032E6,15341184E5,15342048E5,15342912E5,15343776E5,1534464E6,15345504E5,15346368E5,15347232E5,15348096E5,1534896E6,15349824E5,15350688E5,15351552E5,15352416E5,1535328E6,15354144E5,15355008E5,15355872E5,15356736E5,153576E7,15358464E5,15359328E5,15360192E5,15361056E5,1536192E6,15362784E5,15363648E5,15364512E5,15365376E5,1536624E6,
15367104E5,15367968E5,15368832E5,15369696E5,1537056E6,15371424E5,15372288E5,15373152E5,15374016E5,1537488E6,15375744E5,15376608E5,15377472E5,15378336E5,153792E7,15380064E5,15380928E5,15381792E5,15382656E5,1538352E6,15384384E5,15385248E5,15386112E5,15386976E5,1538784E6,15388704E5,15389568E5,15390432E5,15391296E5,1539216E6,15393024E5,15393888E5,15394752E5,15395616E5,1539648E6,15397344E5,15398208E5,15399072E5,15399936E5,154008E7,15401664E5,15402528E5,15403392E5,15404256E5,1540512E6,15405984E5,15406848E5,
15407712E5,15408576E5,1540944E6,15410304E5,15411168E5,15412032E5,15412896E5,1541376E6,15414624E5,15415488E5,15416352E5,15417216E5,1541808E6,15418944E5,15419808E5,15420672E5,15421536E5,154224E7,15423264E5,15424128E5,15424992E5,15425856E5,1542672E6,15427584E5,15428448E5,15429312E5,15430176E5,1543104E6,15431904E5,15432768E5,15433632E5,15434496E5,1543536E6,15436224E5,15437088E5,15437952E5,15438816E5,1543968E6,15440544E5,15441408E5,15442272E5,15443136E5,15444E8,15444864E5,15445728E5,15446592E5,15447456E5,
1544832E6,15449184E5,15450048E5,15450912E5,15451776E5,1545264E6,15453504E5,15454368E5,15455232E5,15456096E5,1545696E6,15457824E5,15458688E5,15459552E5,15460416E5,1546128E6,15462144E5,15463008E5,15463872E5,15464736E5,154656E7,15466464E5,15467328E5,15468192E5,15469056E5,1546992E6,15470784E5,15471648E5,15472512E5,15473376E5,1547424E6,15475104E5,15475968E5,15476832E5,15477696E5,1547856E6,15479424E5,15480288E5,15481152E5,15482016E5,1548288E6,15483744E5,15484608E5,15485472E5,15486336E5,154872E7,15488064E5,
15488928E5,15489792E5,15490656E5,1549152E6,15492384E5,15493248E5,15494112E5,15494976E5,1549584E6,15496704E5,15497568E5,15498432E5,15499296E5,1550016E6,15501024E5,15501888E5,15502752E5,15503616E5,1550448E6,15505344E5,15506208E5,15507072E5,15507936E5,155088E7,15509664E5,15510528E5,15511392E5,15512256E5,1551312E6,15513984E5,15514848E5,15515712E5,15516576E5,1551744E6,15518304E5,15519168E5,15520032E5,15520896E5],["y0",2298660,2253410,2515820,2506600,2460240,2408400,2317430,2240100,2295900,2609800,2594200,
2626400,2615E3,2617800,2394500,2391100,2608300,2676E3,2637700,2766600,3186500,3067700,2570700,2935E3,2949200,2913500,2763600,3216300,2343500,2361E3,258E4,2591800,2595200,2569500,2587700,2372500,2351200,2465600,2625100,2651300,2686700,2783300,2417400,2383800,2736300,2751100,2678900,2622300,2586E3,2365700,2407700,2541300,2600400,2581500,2576200,2550100,2334500,2139400,2015400,2019900,2210100,2191800,2240700,2107400,2026900,2258E3,2255200,2123200,2267800,2236100,2065700,2093300,2315300,2333200,2349800,
2318300,2275E3,2110300,2077100,2335200,2357400,235E4,2293800,2303600,2118700,2100300,2219700,2361100,2349500,2347800,2318400,2141600,2178600,2432500,2448700,2440300,2450100,2424100,2229900,2152400,2402600,2401E3,2418100,2408600,2408400,2212600,2189E3,2450800,2444500,2451900,2451E3,2442600,2287900,2221100,2451900,2460200,2460900,2319900,2270300,2183800,2195300,2485E3,2460900,2500600,2495300,2479100,2290600,2235800,2459900,2484500,2491E3,2525600,2477300,2223700,2146700,2528200,2567800,2556300,2540700,
2503E3,2301200,2251600,2538600,2596500,2553900,2534200,2527300,2337400,2332900,2688500,2585700,2559600,2651600,2586800,2445700,2472300,2633E3,2664600,2649400,2648900,2644600,2406400,2426200,2694E3,2740600,2711800,2700900,2645800,2422800,2438500,2697500,2712500,2690300,2684400,2517300,2435300,2444300,2781800,2807800,2804500,2771300,2798800,2633300,2597100,2946300,2889800,2949600,2951400,2928800,2701400,2709900,3012900,3019100,2977200,3012400,2989800,2752100,2749100,3033300,3050400,3023800,3066400,
3047800,2792200,2799300,3096100,3132500,3082400,3071200,3021400,2818300,2737500,3037800,3123700,3138900,3181800,3118500,2834500,2826900,3171E3,3175900,3184300,3195800,3129100,2834100,2876800,3019E3,3214E3,3227900,3189600,3187800,2886800,2880500,3218200,3253700,3260400,3243300,3204E3,2962700,2968600,3282100,3618900,3017E3,3037300,3044500,2758900,2784600,3032900,3132400,3075800,3108200,3076200,2851800,2837800,3107500,3146800,3145100,3145300,3158400,2872100,2823800,3190400,3209300,3170800,3195300,3183E3,
2910300,2937400,3297100,3293600,3278400,3234200,3224E3,3013900,2955300,3303900,3323300,3352600,3348400,3340600,3110600,3066400,3409200,3462100,3394200,3383100,3433700,3184E3,3092700,3417400,4505200,3094500,3106100,3083200,3005600,2866700,2984100,2954200,3086800,3070500,3040900,2903500,3592500,3316200,2930500,2961900,3009600,3027200,2871600,2831600,2881700,3054200,3116600,3120800,3157300,2950700,2982700,3192800,3223300,3219500,3235900,3214100,3004400,2963500,3280400,3262400,3256E3,3258400,3264900,
3107500,3057400,3326600,3332400,3357E3,3365100,3359500,3127400,3130200,3367100,3422700,3436400,3431100,36E5,3146100,3170900,3467300,3483400,3473600,3454700,3390200,3213600,3188800,3498200,3498600,3493500,3478900,3446400,3239200,3229100,3559600,3563600,3549800,3577300,3524400,3282500,3271300,3599200,3575200,3554400,3540300,3450600,2812E3],["y1",1130400,1065370,1211030,1215590,1206540,1206720,1085450,1047320,1071720,1253170,1261050,1264660,1260240,1264840,1130440,1121660,1294120,1290780,1284540,1302860,
1296810,1165450,1128830,1302070,1304470,1307090,1268E3,1302160,1159330,1163530,1327140,1320680,1319200,1306810,1287990,1121240,1145070,1132400,1310310,1329340,1340060,1333530,1167040,1153260,1356930,1366500,1375970,1378570,1357460,1192240,1188650,1386450,1400570,1395730,1404160,1378120,1195410,1082E3,1189660,1197540,1367850,1389070,1386300,1282240,1209450,1409070,1409450,1271120,1424860,1399990,1240640,1248530,1451770,1460240,1466100,1460990,1446730,1268830,1263270,1473530,1476230,1480760,1460520,
1454730,1263910,1227240,1303900,1474760,1473400,1477380,1466790,1285620,1280100,1491820,1499660,1496260,1485990,1473140,1301290,1273440,1487420,1494560,1500790,1508660,1489400,1301960,1297680,1501170,1503E3,1488980,1501170,1479060,1367980,1296050,1493920,1487830,1479120,1338410,1318550,1266620,1285640,1487970,1489080,1489580,1475400,1471140,1316010,1271940,1476160,1480670,1491030,1480940,1477640,1305750,1296770,1483400,1494440,1495740,1485900,1484400,1319160,1284010,1488140,1502910,1503450,1485410,
1498200,1323200,1303150,1506840,1523440,1521490,1516770,1504300,1327520,1307630,1518100,1521370,1521280,1521660,1517700,1349880,1333010,1543800,1553730,1546490,1541710,1532690,1367020,1354040,1560080,1564990,1565050,1561110,1406570,1340850,1368550,1600180,1630760,1621360,1636580,1652580,1489550,1465750,1731080,1730190,1732260,1730210,1724800,1519480,1520490,1758280,1774530,1770690,1781100,1762270,1551690,1541620,1787290,1795490,1802940,1799130,1778850,1560040,1564580,1822410,1819680,1812390,1814100,
1798060,1587880,1589320,1833920,1843420,1851460,1845550,1822980,1596860,1595900,1866E3,1860480,1862600,1863950,1827540,1585280,1588970,1683930,1879500,1883300,1879040,1846160,1639090,1632580,1895780,1897620,1906E3,1906730,1895290,1670120,1670190,1914360,1932890,1933160,1921800,1898720,1673530,1685190,1937730,1951850,1949900,1949020,1923160,1718450,1704040,1964800,1975140,2002510,1985340,1959E3,1736810,1727670,2006070,2013910,2012460,1999630,1977020,1754720,1778560,2060360,2057730,2055990,2036720,

2182120,1950150,1931800,2215380,2216240,2226480,2220480,2208790,1972190,1957520,2253470,2247170,2245720,2285890,2220730,1986340,1967720,2264340,2270140,2267210,2268950,2246450,2048760,1994100,2288680,2296010,2313730,2311290,2293790,2034250,2025380,2326190,2323990,2320790,2271600,2244270,1663290],["y2",820900,766050,894390,894540,887590,814490,786610,744660,770920,930330,930190,942060,933690,922280,810770,809760,952010,959070,957020,955890,948250,825710,804970,958480,959090,970200,907010,950150,825240,
820890,971020,973560,967940,960360,931820,795020,753860,808740,97E4,981020,979810,975840,829690,819300,992290,998040,1006540,1013790,995130,848190,851890,1024210,1032210,1032290,1027510,1010090,850110,741740,844400,850410,1006690,1018470,1011630,916990,861050,1039650,1032640,904200,1045560,1022330,888970,896300,1073460,1074860,1074820,1074880,1057340,909410,906710,1078860,1092760,1083360,1078680,1067310,903090,858360,947540,1089590,1095060,1093130,1070660,915380,916530,1108410,1109460,1097230,1094520,
1074630,915520,915750,1101730,1104580,1107930,1116850,1106360,928500,928210,1110530,1103230,1099970,1106180,1096060,982050,932620,1100880,1099970,1080040,959480,951360,902160,916070,1094120,1092530,1089290,1081760,1073320,937320,900010,1084910,1082620,1080960,1074050,1077810,925090,913970,1082900,1089240,1088890,1088720,1084170,938750,904060,1091540,1093660,1104520,1085860,1091880,939720,919790,1098590,1110310,1105580,1105220,1096580,940670,923480,1102360,1102760,1102280,1108680,1109210,955490,944730,
1125380,1127440,1123070,1123910,1121160,966340,946940,1141980,1146790,1147420,1132920,990870,946370,964610,1171550,1187E3,1186370,1199100,1213E3,1062280,1035740,1274070,1276740,1280670,1282770,1257200,1085370,1080510,1293120,1308880,1302170,1317570,1298110,1111780,1106410,1317620,1318010,1332680,1328530,1305330,1113540,1119830,1340410,1348770,1346910,1352950,1324040,1139450,1136680,1355970,1364950,1377510,1375770,1338490,1140310,1151830,1374520,1374330,1378990,1372390,1347390,1135560,1121640,1217410,
1390340,1392710,1383070,1372400,1170430,1169550,1404540,1412720,1414110,1417200,1388240,1194260,1188850,1416140,1425890,1426380,1410520,1388600,1197940,1197680,1432620,1448350,1436320,1438890,1412650,1222040,1215220,1454190,1456740,1490670,1470910,1438940,1243620,1241210,1483460,1489950,1488440,1482490,1465050,1261450,1281800,1552680,1527050,1526500,1511360,1497560,1302860,1292930,1547830,1550610,1546490,1547790,1525750,1324580,1321580,1576620,1575060,1570240,1574670,1543830,1341780,1341710,1577840,
1565630,1580460,1569570,1543390,1431880,1301600,1401500,1401040,1530910,1526670,1498750,1383070,1284E3,1401510,1189880,1309810,1380230,1383630,1254140,1216830,1243860,1442240,1481680,1480680,1490700,1315410,1300930,1530520,1532340,1539150,1541510,1532770,1344910,1325530,1563330,1568490,1580110,1575130,1564880,1369810,1359060,1608230,1605640,1605970,1601640,1590810,1381740,1375190,1625850,1621800,1629910,1628510,1609760,1397880,1392180,1647700,1646770,1644200,1667150,1610910,1408450,1395010,1652870,
1658870,1660310,1659060,1629490,1435450,1407720,1675610,1682450,1682070,1693010,1669030,1448500,1439490,1710110,1702690,1707E3,1662770,1512800,1101660],["y3",409540,377260,456380,460230,452020,389350,397230,369E3,382180,473570,477470,477550,478030,466150,397480,406380,494570,494680,482810,487700,475090,400520,397940,484160,487740,493260,434500,475410,398650,404690,491980,493410,485250,484740,465490,377460,353960,396390,493300,497560,495110,485260,394770,402910,500540,506260,509680,514010,494350,405360,

549580,539920,541510,540380,450260,432260,535950,545160,543810,536990,539680,446570,444470,543450,549070,547840,541430,540200,450080,431800,549290,545890,556300,536500,543890,450890,440180,550850,554740,553460,553440,546420,446710,436640,553270,547750,551920,547610,545500,449220,447510,560050,561560,561560,556630,559340,461630,456300,569070,574800,575220,566180,472200,450530,462960,590290,597250,592970,604870,613050,512200,495980,649860,645070,636950,647120,630390,518820,525990,661700,659770,660650,
669560,644510,529610,539520,673850,668530,673770,669480,654540,536090,548400,690100,684900,687040,685940,666360,560140,553050,696740,694490,703E3,697980,674460,548230,557370,697150,700110,701170,695810,669780,543500,540170,597430,711500,699770,698520,682170,568380,572950,715580,716050,720770,720660,695220,572970,578170,722280,724280,727910,719820,699840,580870,586270,729850,733680,726590,731270,709330,593070,600500,743590,743690,767660,747140,730510,607540,610480,762440,772960,763480,758490,741090,

823010,820620,821400,820760,804300,681870,681460,831580,835600,835390,840770,810700,675170,680870,832E3,836790,845630,844560,821810,690310,683810,851150,848090,846480,858340,831290,696470,695540,866980,868190,861720,834530,706650,439140]],types:{y0:"line",y1:"line",y2:"line",y3:"line",x:"x"},names:{y0:"#0",y1:"#1",y2:"#2",y3:"#3"},colors:{y0:"#cb513a",y1:"#73c03a",y2:"#65b9ac",y3:"#4682b4"}}],chart=new Chart(document.querySelector(".chartContainer"),"Followers",sourceData[0]);
